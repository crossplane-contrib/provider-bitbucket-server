
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: webhooks.webhook.bitbucket-server.crossplane.io
spec:
  group: webhook.bitbucket-server.crossplane.io
  names:
    kind: Webhook
    listKind: WebhookList
    plural: webhooks
    singular: webhook
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.bindingPhase
      name: STATUS
      type: string
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .spec.classRef.name
      name: CLASS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: An Webhook is an SSH key with read or write access to a bitbucket
          git repo.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An WebhookSpec defines the desired state of an Webhook.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: WebhookParameters are the configurable fields of a Webhook.
                properties:
                  projectKey:
                    description: The project key is the short name for the project
                      for a repository. Typically the key for a project called "Foo
                      Bar" would be "FB".
                    type: string
                  repoName:
                    description: The repoName is the name of the git repository.
                    type: string
                  webhook:
                    description: BitbucketWebhook provide a way to configure Bitbucket
                      Server to make requests to your server (or another external
                      service) whenever certain events occur in Bitbucket
                    properties:
                      configuration:
                        description: BitbucketWebhookConfiguration configures settings
                          for a webhook configuration
                        properties:
                          secret:
                            description: Webhook secret. Leave empty to get a secret
                              in the connection details
                            type: string
                        type: object
                      events:
                        items:
                          description: Event describes a bitbucket server event type
                          enum:
                          - repo:refs_changed
                          - repo:modified
                          type: string
                        type: array
                      name:
                        type: string
                      url:
                        type: string
                    required:
                    - configuration
                    - events
                    - name
                    - url
                    type: object
                required:
                - projectKey
                - repoName
                - webhook
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An WebhookStatus represents the observed state of an Webhook.
            properties:
              atProvider:
                description: WebhookObservation are the observable fields of an Webhook.
                properties:
                  id:
                    description: Consider stats here?
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
